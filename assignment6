from pandas import DataFrame, Series
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np


data = pd.read_csv('./ss13hil.csv')
df = DataFrame(data)

hhl_series          = Series(df['HHL']).replace({1:"English Only",2:"Spanish",3:"Other Indo-European Languages",4:"Asian and Pacific Island Languages", 5:"Other"})
veh_series          = Series(df['VEH'].dropna())
hincp_series        = Series(df['HINCP'])

    # Need array instead of series for Valp and Taxp to be able to use color maps.
    # https://stackoverflow.com/questions/44238796/convert-panda-series-into-numpy-array?rq=1
    # Week 6 Lecture 2 @22:10

valp_series         = Series(df['VALP'])
taxp_series         = Series(df['TAXP']).replace({1:0,2:1,3:50,4:100,5:150,6:200,7:250,8:300,9:350,10:400,11:450,12:500,13:550,14:600,15:650,16:700,17:750,18:800,19:850,20:900,
                                                    21:950,22:1000,23:1100,24:1200,25:1300,26:1400,27:1500,28:1600,29:1700,30:1800,31:1900,32:2000,33:2100,34:2200,35:2300,36:2400,
                                                    37:2500,38:2600,39:2700,40:2800,41:2900,42:3000,43:3100,44:3200,45:3300,46:3400,47:3500,48:3600,49:3700,50:3800,51:3900,52:4000,
                                                    53:4100,54:4200,55:4300,56:4400,57:4500,58:4600,59:4700,60:4800,61:4900,62:5000,63:5500,64:6000,65:7000,66:8000,67:9000,68:10000})

counts_hhl_series   = hhl_series.value_counts()
counts_veh_series   = veh_series.value_counts()


def graph_hhl():
    plt.subplot(2,2,1)
    plt.pie(counts_hhl_series, startangle = 250)
    plt.legend(counts_hhl_series.index, loc='upper left')
    plt.title("Household Languages")
    plt.ylabel('HHL')
    plt.axis('equal')

def graph_hincp():
    plt.subplot(2,2,2)
    ##plt.title("Distribution of Household Income")
    ##plt.ylabel("Density")
    ##plt.xlabel("Household Income ($) - Log Scaled")

    #data = np.random.normal(size=10000)
    #data = pd.Series(hincp_series)
    #plt.hist(data, bins=np.logspace(np.log10(0.1), np.log10(1.0), 50))
    #plt.gca().set_xscale("log")
    #plt.show()

    plt.plot(hincp_series, 'k--')

    #x = pd.Series(hincp_series)
    #hist, bins, _ = plt.hist(hincp_series, bins=8)
    #logbins = np.logspace(np.log10(bins[0]), np.log10(bins[-1]), len(bins))
    #plt.subplot(212)
    #plt.hist(x, bins=logbins)
    #plt.xscale('log')


    plt.hist(x=hincp_series) #ORIGINAL
    plt.ylabel('Thousands of Households')


def graph_veh():
    plt.subplot(2,2,3)
    x_axis = counts_veh_series.index
    y_axis = counts_veh_series
    plt.bar(x_axis, y_axis,color='red')
    plt.title('Vehicles Available in Households')
    plt.xlabel('# of Vehicles')
    plt.ylabel('Thousands of Households')

def graph_pt_pv():
    plt.subplot(2,2,4)
    scplot = plt.scatter(valp_series,taxp_series,marker='o',s = df['WGTP'],c=df['MRGP'],cmap='bwr',vmax=5000, alpha=.3) ##################
    plt.xlim([0, 1200000])
    plt.colorbar(scplot).ax.set_ylabel('First Mortgage Payment (Monthly $)', rotation=90)
    plt.title('Property Taxes vs. Property Values')
    plt.xlabel('Property Value ($)')
    plt.ylabel('Taxes ($)')
    plt.show()
    

def main():
    plt.figure(figsize=(18,10))
    graph_hhl()
    graph_hincp()
    graph_veh()
    graph_pt_pv()
    plt.savefig('pums.png')
    plt.show()

main()
